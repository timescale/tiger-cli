// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"time"
)

// Defines values for DeployStatus.
const (
	CONFIGURING DeployStatus = "CONFIGURING"
	DELETED     DeployStatus = "DELETED"
	DELETING    DeployStatus = "DELETING"
	OPTIMIZING  DeployStatus = "OPTIMIZING"
	PAUSED      DeployStatus = "PAUSED"
	PAUSING     DeployStatus = "PAUSING"
	QUEUED      DeployStatus = "QUEUED"
	READY       DeployStatus = "READY"
	RESUMING    DeployStatus = "RESUMING"
	UNSTABLE    DeployStatus = "UNSTABLE"
	UPGRADING   DeployStatus = "UPGRADING"
)

// Defines values for ReadReplicaSetStatus.
const (
	ReadReplicaSetStatusActive   ReadReplicaSetStatus = "active"
	ReadReplicaSetStatusCreating ReadReplicaSetStatus = "creating"
	ReadReplicaSetStatusDeleting ReadReplicaSetStatus = "deleting"
	ReadReplicaSetStatusError    ReadReplicaSetStatus = "error"
	ReadReplicaSetStatusResizing ReadReplicaSetStatus = "resizing"
)

// Defines values for ServiceCreateAddons.
const (
	Ai         ServiceCreateAddons = "ai"
	TimeSeries ServiceCreateAddons = "time-series"
)

// Defines values for ServiceType.
const (
	POSTGRES    ServiceType = "POSTGRES"
	TIMESCALEDB ServiceType = "TIMESCALEDB"
	VECTOR      ServiceType = "VECTOR"
)

// Defines values for SetEnvironmentInputEnvironment.
const (
	DEV  SetEnvironmentInputEnvironment = "DEV"
	PROD SetEnvironmentInputEnvironment = "PROD"
)

// ConnectionPooler defines model for ConnectionPooler.
type ConnectionPooler struct {
	Endpoint *Endpoint `json:"endpoint,omitempty"`
}

// DeployStatus defines model for DeployStatus.
type DeployStatus string

// Endpoint defines model for Endpoint.
type Endpoint struct {
	Host *string `json:"host,omitempty"`
	Port *int    `json:"port,omitempty"`
}

// Error defines model for Error.
type Error struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// ForkInput defines model for ForkInput.
type ForkInput struct {
	// Name The name for the new forked service.
	Name string `json:"name"`
}

// ForkSpec defines model for ForkSpec.
type ForkSpec struct {
	IsStandby *bool   `json:"is_standby,omitempty"`
	ProjectId *string `json:"project_id,omitempty"`
	ServiceId *string `json:"service_id,omitempty"`
}

// HAReplica defines model for HAReplica.
type HAReplica struct {
	// ReplicaCount Number of high-availability replicas (all replicas are asynchronous by default).
	ReplicaCount *int `json:"replica_count,omitempty"`

	// SyncReplicaCount Number of synchronous high-availability replicas.
	SyncReplicaCount *int `json:"sync_replica_count,omitempty"`
}

// Peering defines model for Peering.
type Peering struct {
	ErrorMessage   *string `json:"error_message,omitempty"`
	Id             *string `json:"id,omitempty"`
	PeerAccountId  *string `json:"peer_account_id,omitempty"`
	PeerRegionCode *string `json:"peer_region_code,omitempty"`
	PeerVpcId      *string `json:"peer_vpc_id,omitempty"`
	ProvisionedId  *string `json:"provisioned_id,omitempty"`
	Status         *string `json:"status,omitempty"`
}

// PeeringCreate defines model for PeeringCreate.
type PeeringCreate struct {
	PeerAccountId  string `json:"peer_account_id"`
	PeerRegionCode string `json:"peer_region_code"`
	PeerVpcId      string `json:"peer_vpc_id"`
}

// ReadReplicaSet defines model for ReadReplicaSet.
type ReadReplicaSet struct {
	ConnectionPooler *ConnectionPooler `json:"connection_pooler,omitempty"`

	// CpuMillis CPU allocation in milli-cores.
	CpuMillis *int      `json:"cpu_millis,omitempty"`
	Endpoint  *Endpoint `json:"endpoint,omitempty"`
	Id        *string   `json:"id,omitempty"`

	// MemoryGbs Memory allocation in gigabytes.
	MemoryGbs *int `json:"memory_gbs,omitempty"`

	// Metadata Additional metadata for the read replica set
	Metadata *struct {
		// Environment Environment tag for the read replica set
		Environment *string `json:"environment,omitempty"`
	} `json:"metadata,omitempty"`
	Name *string `json:"name,omitempty"`

	// Nodes Number of nodes in the replica set.
	Nodes  *int                  `json:"nodes,omitempty"`
	Status *ReadReplicaSetStatus `json:"status,omitempty"`
}

// ReadReplicaSetStatus defines model for ReadReplicaSet.Status.
type ReadReplicaSetStatus string

// ReadReplicaSetCreate defines model for ReadReplicaSetCreate.
type ReadReplicaSetCreate struct {
	// CpuMillis The initial CPU allocation in milli-cores.
	CpuMillis int `json:"cpu_millis"`

	// MemoryGbs The initial memory allocation in gigabytes.
	MemoryGbs int `json:"memory_gbs"`

	// Name A human-readable name for the read replica.
	Name string `json:"name"`

	// Nodes Number of nodes to create in the replica set.
	Nodes int `json:"nodes"`
}

// ResizeInput defines model for ResizeInput.
type ResizeInput struct {
	// CpuMillis The new CPU allocation in milli-cores (e.g., 1000 for 1 vCPU).
	CpuMillis int `json:"cpu_millis"`

	// MemoryGbs The new memory allocation in gigabytes.
	MemoryGbs int `json:"memory_gbs"`

	// Nodes The new number of nodes in the replica set.
	Nodes *int `json:"nodes,omitempty"`
}

// Service defines model for Service.
type Service struct {
	ConnectionPooler *ConnectionPooler `json:"connection_pooler,omitempty"`

	// Created Creation timestamp
	Created    *time.Time `json:"created,omitempty"`
	Endpoint   *Endpoint  `json:"endpoint,omitempty"`
	ForkedFrom *ForkSpec  `json:"forked_from,omitempty"`
	HaReplicas *HAReplica `json:"ha_replicas,omitempty"`

	// InitialPassword The initial password for the service.
	InitialPassword *string `json:"initial_password,omitempty"`

	// Metadata Additional metadata for the service
	Metadata *struct {
		// Environment Environment tag for the service
		Environment *string `json:"environment,omitempty"`
	} `json:"metadata,omitempty"`

	// Name The name of the service.
	Name *string `json:"name,omitempty"`

	// Paused Whether the service is paused
	Paused *bool `json:"paused,omitempty"`

	// ProjectId The project this service belongs to.
	ProjectId       *string           `json:"project_id,omitempty"`
	ReadReplicaSets *[]ReadReplicaSet `json:"read_replica_sets,omitempty"`

	// RegionCode The cloud region where the service is hosted.
	RegionCode *string `json:"region_code,omitempty"`

	// Resources List of resources allocated to the service
	Resources *[]struct {
		// Id Resource identifier
		Id *string `json:"id,omitempty"`

		// Spec Resource specification
		Spec *struct {
			// CpuMillis CPU allocation in millicores
			CpuMillis *int `json:"cpu_millis,omitempty"`

			// MemoryGbs Memory allocation in gigabytes
			MemoryGbs *int `json:"memory_gbs,omitempty"`

			// VolumeType Type of storage volume
			VolumeType *string `json:"volume_type,omitempty"`
		} `json:"spec,omitempty"`
	} `json:"resources,omitempty"`

	// ServiceId The unique identifier for the service.
	ServiceId   *string       `json:"service_id,omitempty"`
	ServiceType *ServiceType  `json:"service_type,omitempty"`
	Status      *DeployStatus `json:"status,omitempty"`

	// VpcEndpoint VPC endpoint configuration if available
	VpcEndpoint *map[string]interface{} `json:"vpcEndpoint"`
}

// ServiceCreate defines model for ServiceCreate.
type ServiceCreate struct {
	// Addons List of addons to enable for the service. 'time-series' enables TimescaleDB, 'ai' enables AI/vector extensions.
	Addons []ServiceCreateAddons `json:"addons"`

	// CpuMillis The initial CPU allocation in milli-cores.
	CpuMillis int `json:"cpu_millis"`

	// Free Whether to create a free service (if true, replica_count, cpu_millis, and memory_gbs must not be provided)
	Free *bool `json:"free,omitempty"`

	// MemoryGbs The initial memory allocation in gigabytes.
	MemoryGbs int `json:"memory_gbs"`

	// Name A human-readable name for the service.
	Name       string `json:"name"`
	RegionCode string `json:"region_code"`

	// ReplicaCount Number of high-availability replicas to create (all replicas are asynchronous by default).
	ReplicaCount int `json:"replica_count"`
}

// ServiceCreateAddons defines model for ServiceCreate.Addons.
type ServiceCreateAddons string

// ServiceType defines model for ServiceType.
type ServiceType string

// ServiceVPCInput defines model for ServiceVPCInput.
type ServiceVPCInput struct {
	// VpcId The ID of the VPC to attach the service to.
	VpcId string `json:"vpc_id"`
}

// SetEnvironmentInput defines model for SetEnvironmentInput.
type SetEnvironmentInput struct {
	// Environment The target environment for the service.
	Environment SetEnvironmentInputEnvironment `json:"environment"`
}

// SetEnvironmentInputEnvironment The target environment for the service.
type SetEnvironmentInputEnvironment string

// SetHAReplicaInput At least one of sync_replica_count or replica_count must be provided.
type SetHAReplicaInput struct {
	// ReplicaCount Number of high-availability replicas (all replicas are asynchronous by default).
	ReplicaCount *int `json:"replica_count,omitempty"`

	// SyncReplicaCount Number of synchronous high-availability replicas.
	SyncReplicaCount *int `json:"sync_replica_count,omitempty"`
}

// UpdatePasswordInput defines model for UpdatePasswordInput.
type UpdatePasswordInput struct {
	// Password The new password.
	Password string `json:"password"`
}

// VPC defines model for VPC.
type VPC struct {
	Cidr       *string `json:"cidr,omitempty"`
	Id         *string `json:"id,omitempty"`
	Name       *string `json:"name,omitempty"`
	RegionCode *string `json:"region_code,omitempty"`
}

// VPCCreate defines model for VPCCreate.
type VPCCreate struct {
	Cidr       string `json:"cidr"`
	Name       string `json:"name"`
	RegionCode string `json:"region_code"`
}

// VPCRename defines model for VPCRename.
type VPCRename struct {
	// Name The new name for the VPC.
	Name string `json:"name"`
}

// PeeringId defines model for PeeringId.
type PeeringId = string

// ProjectId defines model for ProjectId.
type ProjectId = string

// ReplicaSetId defines model for ReplicaSetId.
type ReplicaSetId = string

// ServiceId defines model for ServiceId.
type ServiceId = string

// VPCId defines model for VPCId.
type VPCId = string

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Conflict defines model for Conflict.
type Conflict = Error

// NotFound defines model for NotFound.
type NotFound = Error

// SuccessMessage defines model for SuccessMessage.
type SuccessMessage struct {
	Message *string `json:"message,omitempty"`
}

// PostProjectsProjectIdServicesJSONRequestBody defines body for PostProjectsProjectIdServices for application/json ContentType.
type PostProjectsProjectIdServicesJSONRequestBody = ServiceCreate

// PostProjectsProjectIdServicesServiceIdAttachToVPCJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdAttachToVPC for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdAttachToVPCJSONRequestBody = ServiceVPCInput

// PostProjectsProjectIdServicesServiceIdDetachFromVPCJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdDetachFromVPC for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdDetachFromVPCJSONRequestBody = ServiceVPCInput

// PostProjectsProjectIdServicesServiceIdForkServiceJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdForkService for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdForkServiceJSONRequestBody = ForkInput

// PostProjectsProjectIdServicesServiceIdReplicaSetsJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdReplicaSets for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdReplicaSetsJSONRequestBody = ReadReplicaSetCreate

// PostProjectsProjectIdServicesServiceIdReplicaSetsReplicaSetIdResizeJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdReplicaSetsReplicaSetIdResize for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdReplicaSetsReplicaSetIdResizeJSONRequestBody = ResizeInput

// PostProjectsProjectIdServicesServiceIdReplicaSetsReplicaSetIdSetEnvironmentJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdReplicaSetsReplicaSetIdSetEnvironment for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdReplicaSetsReplicaSetIdSetEnvironmentJSONRequestBody = SetEnvironmentInput

// PostProjectsProjectIdServicesServiceIdResizeJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdResize for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdResizeJSONRequestBody = ResizeInput

// PostProjectsProjectIdServicesServiceIdSetEnvironmentJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdSetEnvironment for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdSetEnvironmentJSONRequestBody = SetEnvironmentInput

// PostProjectsProjectIdServicesServiceIdSetHAJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdSetHA for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdSetHAJSONRequestBody = SetHAReplicaInput

// PostProjectsProjectIdServicesServiceIdUpdatePasswordJSONRequestBody defines body for PostProjectsProjectIdServicesServiceIdUpdatePassword for application/json ContentType.
type PostProjectsProjectIdServicesServiceIdUpdatePasswordJSONRequestBody = UpdatePasswordInput

// PostProjectsProjectIdVpcsJSONRequestBody defines body for PostProjectsProjectIdVpcs for application/json ContentType.
type PostProjectsProjectIdVpcsJSONRequestBody = VPCCreate

// PostProjectsProjectIdVpcsVpcIdPeeringsJSONRequestBody defines body for PostProjectsProjectIdVpcsVpcIdPeerings for application/json ContentType.
type PostProjectsProjectIdVpcsVpcIdPeeringsJSONRequestBody = PeeringCreate

// PostProjectsProjectIdVpcsVpcIdRenameJSONRequestBody defines body for PostProjectsProjectIdVpcsVpcIdRename for application/json ContentType.
type PostProjectsProjectIdVpcsVpcIdRenameJSONRequestBody = VPCRename
